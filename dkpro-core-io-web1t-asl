{
  "components" : {
    "schemas" : {
      "CasSentence" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "sentence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sentence"
            }
          },
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          }
        }
      },
      "EmptyCas" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          }
        }
      },
      "Sentence" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          },
          "begin" : {
            "type" : "integer"
          }
        }
      }
    }
  },
  "openapi" : "3.0.0",
  "paths" : {
    "/Web1TWriter" : {
      "post" : {
        "summary" : "Web1T n-gram index format writer.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasSentence"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyCas"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "schema" : {
            "default" : [ "org.apache.uima.fit.descriptor.ConfigurationParameter.NO_DEFAULT_VALUE" ]
          },
          "in" : "query",
          "name" : "inputTypes",
          "description" : "Types to generate n-grams from.\n\nExample: Token.class.getName() + \"/pos/PosValue\" for part-of-speech n-grams",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "org.apache.uima.fit.descriptor.ConfigurationParameter.NO_DEFAULT_VALUE" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "targetLocation",
          "description" : "Location to which the output is written.",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "UTF-8" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "targetEncoding",
          "description" : "Character encoding of the output data.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "1" ],
            "type" : "integer"
          },
          "in" : "query",
          "name" : "minNgramLength",
          "description" : "Minimum n-gram length.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "3" ],
            "type" : "integer"
          },
          "in" : "query",
          "name" : "maxNgramLength",
          "description" : "Maximum n-gram length.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "false" ],
            "type" : "boolean"
          },
          "in" : "query",
          "name" : "lowercase",
          "description" : "Create a lower case index.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "true" ],
            "type" : "boolean"
          },
          "in" : "query",
          "name" : "createIndexes",
          "description" : "Create the indexes that jWeb1T needs to operate. (default: true)",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "1" ],
            "type" : "integer"
          },
          "in" : "query",
          "name" : "minFreq",
          "description" : "Specifies the minimum frequency a NGram must have to be written to the\nfinal index. The specified value is interpreted as inclusive value, the\ndefault is 1. Thus, all NGrams with a frequency of at least 1 or higher\nwill be written.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "1.0" ]
          },
          "in" : "query",
          "name" : "splitFileTreshold",
          "description" : "The input file(s) is/are split into smaller files for quick access. An\nown file is created if the first two starting letters (or the starting\nletter if the word has a length of 1 character) account for at least x%\nof all starting letters in the input file(s). The default value for\nsplitting a file is 1.0%. Every word that has starting characters which\ndoes not suffice the threshold is written with other words that also did\nnot meet the threshold into an own file for miscellaneous words. A high\nthreshold will lead to only a few, but large files and a most likely very\nlarge misc. file. A low threshold results in many small files. Use a zero or a negative\nvalue to write everything to one file.",
          "required" : false
        }, {
          "schema" : {
            "default" : [ "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "contextType",
          "description" : "The type being used for segments",
          "required" : true
        } ]
      }
    }
  },
  "info" : {
    "title" : "DKPro Teanga Wrapper",
    "version" : "1.0"
  }
}