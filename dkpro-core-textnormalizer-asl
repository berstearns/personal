{
  "components" : {
    "schemas" : {
      "MorphologicalFeatures" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "voice" : {
            "type" : "string"
          },
          "mood" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "degree" : {
            "type" : "string"
          },
          "animacy" : {
            "type" : "string"
          },
          "reflex" : {
            "type" : "string"
          },
          "verbForm" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "pronType" : {
            "type" : "string"
          },
          "negative" : {
            "type" : "string"
          },
          "person" : {
            "type" : "string"
          },
          "transitivity" : {
            "type" : "string"
          },
          "aspect" : {
            "type" : "string"
          },
          "possessive" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "numType" : {
            "type" : "string"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "tense" : {
            "type" : "string"
          },
          "case" : {
            "type" : "string"
          },
          "definiteness" : {
            "type" : "string"
          }
        }
      },
      "SofaChangeAnnotation" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "operation" : {
            "type" : "string"
          }
        }
      },
      "CasSofaChangeAnnotation" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "sofaChangeAnnotation" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SofaChangeAnnotation"
            }
          }
        }
      },
      "POS" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "posValue" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "coarseValue" : {
            "type" : "string"
          }
        }
      },
      "Lemma" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "TokenForm" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "CasToken" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "token" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Token"
            }
          }
        }
      },
      "EmptyCas" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          }
        }
      },
      "Token" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "parent" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "form" : {
            "$ref" : "#/components/schemas/TokenForm"
          },
          "pos" : {
            "$ref" : "#/components/schemas/POS"
          },
          "lemma" : {
            "$ref" : "#/components/schemas/Lemma"
          },
          "syntacticFunction" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "morph" : {
            "$ref" : "#/components/schemas/MorphologicalFeatures"
          },
          "begin" : {
            "type" : "integer"
          },
          "stem" : {
            "$ref" : "#/components/schemas/Stem"
          }
        }
      },
      "Annotation" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          }
        }
      },
      "Stem" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "openapi" : "3.0.0",
  "paths" : {
    "/Normalizer_ImplBase" : {
      "post" : {
        "summary" : "Base class for normalizers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CasSofaChangeAnnotation"
                }
              }
            }
          }
        },
        "parameters" : [ ]
      }
    },
    "/RegexTokenFilter" : {
      "post" : {
        "summary" : "Remove every token that does or does not match a given regular expression.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyCas"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "schema" : {
            "default" : [ "org.apache.uima.fit.descriptor.ConfigurationParameter.NO_DEFAULT_VALUE" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "regex",
          "description" : "Every token that does or does not match this regular expression will be removed.",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "true" ],
            "type" : "boolean"
          },
          "in" : "query",
          "name" : "mustMatch",
          "description" : "If this parameter is set to true (default), retain only tokens that match the regex given in\n#PARAM_REGEX. If set to false, all tokens that match the given regex are removed.",
          "required" : true
        } ]
      }
    },
    "/TrailingCharacterRemover" : {
      "post" : {
        "summary" : "Removing trailing character (sequences) from tokens, e.g. punctuation.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CasToken"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "schema" : {
            "default" : [ "[\\Q,-“^»*’()&/\"'©§'—«·=\\E0-9A-Z]+" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "pattern",
          "description" : "A regex to be trimmed from the end of tokens.",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "1" ],
            "type" : "integer"
          },
          "in" : "query",
          "name" : "minTokenLength",
          "description" : "All tokens that are shorter than the minimum token length after removing trailing chars are\ncompletely removed. By default (1), empty tokens are removed. Set to 0 or a negative value if\nno tokens should be removed.\n<p>\nShorter tokens that do not have trailing chars removed are always retained, regardless of\ntheir length.",
          "required" : true
        } ]
      }
    },
    "/JCasHolder" : {
      "post" : {
        "summary" : "Utility analysis engine for use with CAS multipliers in uimaFIT pipelines.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmptyCas"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyCas"
                }
              }
            }
          }
        },
        "parameters" : [ ]
      }
    },
    "/AnnotationByTextFilter" : {
      "post" : {
        "summary" : "Reads a list of words from a text file (one token per line) and retains only tokens or other\nannotations that match any of these words.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmptyCas"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyCas"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "schema" : {
            "default" : [ "org.apache.uima.fit.descriptor.ConfigurationParameter.NO_DEFAULT_VALUE" ]
          },
          "in" : "query",
          "name" : "modelLocation",
          "description" : "Location from which the model is read. This is either a local path or a classpath location.\nIn the latter case, the model artifact (if any) is searched as well.",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "true" ],
            "type" : "boolean"
          },
          "in" : "query",
          "name" : "ignoreCase",
          "description" : "If true, annotation texts are filtered case-independently (i.e. words that\noccur in the list with different casing are not filtered out).",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "UTF-8" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "modelEncoding",
          "description" : "The character encoding used by the model.",
          "required" : true
        }, {
          "schema" : {
            "default" : [ "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token" ],
            "type" : "string"
          },
          "in" : "query",
          "name" : "typeName",
          "description" : "Annotation type to filter.",
          "required" : true
        } ]
      }
    }
  },
  "info" : {
    "title" : "DKPro Teanga Wrapper",
    "version" : "1.0"
  }
}