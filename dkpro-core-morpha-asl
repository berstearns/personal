{
  "components" : {
    "schemas" : {
      "CasPOSSentenceToken" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "sentence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sentence"
            }
          },
          "pOS" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POS"
            }
          },
          "documentText" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "token" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Token"
            }
          }
        }
      },
      "MorphologicalFeatures" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "voice" : {
            "type" : "string"
          },
          "mood" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "degree" : {
            "type" : "string"
          },
          "animacy" : {
            "type" : "string"
          },
          "reflex" : {
            "type" : "string"
          },
          "verbForm" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "pronType" : {
            "type" : "string"
          },
          "negative" : {
            "type" : "string"
          },
          "person" : {
            "type" : "string"
          },
          "transitivity" : {
            "type" : "string"
          },
          "aspect" : {
            "type" : "string"
          },
          "possessive" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "numType" : {
            "type" : "string"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "tense" : {
            "type" : "string"
          },
          "case" : {
            "type" : "string"
          },
          "definiteness" : {
            "type" : "string"
          }
        }
      },
      "CasLemma" : {
        "type" : "object",
        "required" : [ "documentText", "language" ],
        "properties" : {
          "documentText" : {
            "type" : "string"
          },
          "lemma" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Lemma"
            }
          },
          "language" : {
            "type" : "string"
          }
        }
      },
      "POS" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "posValue" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "coarseValue" : {
            "type" : "string"
          }
        }
      },
      "Lemma" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "TokenForm" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Token" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "parent" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "form" : {
            "$ref" : "#/components/schemas/TokenForm"
          },
          "pos" : {
            "$ref" : "#/components/schemas/POS"
          },
          "lemma" : {
            "$ref" : "#/components/schemas/Lemma"
          },
          "syntacticFunction" : {
            "type" : "string"
          },
          "end" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "morph" : {
            "$ref" : "#/components/schemas/MorphologicalFeatures"
          },
          "begin" : {
            "type" : "integer"
          },
          "stem" : {
            "$ref" : "#/components/schemas/Stem"
          }
        }
      },
      "Sentence" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          },
          "begin" : {
            "type" : "integer"
          }
        }
      },
      "Annotation" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          }
        }
      },
      "Stem" : {
        "type" : "object",
        "required" : [ "begin", "end" ],
        "properties" : {
          "end" : {
            "type" : "integer"
          },
          "begin" : {
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "openapi" : "3.0.0",
  "paths" : {
    "/MorphaLemmatizer" : {
      "post" : {
        "summary" : "Lemmatize based on a finite-state machine. Uses the <a href=\"https://github.com/knowitall/morpha\">\nJava port</a> of <a href=\"http://www.informatics.sussex.ac.uk/research/groups/nlp/carroll/morph.html\">Morpha</a>.\n\n<p>References:</p>\n<ul>\n<li>Minnen, G., J. Carroll and D. Pearce (2001). Applied morphological \nprocessing of English, Natural Language Engineering, 7(3). 207-223.</li>\n</ul>",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CasPOSSentenceToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CasLemma"
                }
              }
            }
          }
        },
        "parameters" : [ {
          "schema" : {
            "default" : [ "false" ],
            "type" : "boolean"
          },
          "in" : "query",
          "name" : "readPOS",
          "description" : "Pass part-of-speech information on to Morpha. Since we currently do not know in which format\nthe part-of-speech tags are expected by Morpha, we just pass on the actual pos tag value\nwe get from the token. This may produce worse results than not passing on pos tags at all,\nso this is disabled by default.",
          "required" : true
        } ]
      }
    }
  },
  "info" : {
    "title" : "DKPro Teanga Wrapper",
    "version" : "1.0"
  }
}